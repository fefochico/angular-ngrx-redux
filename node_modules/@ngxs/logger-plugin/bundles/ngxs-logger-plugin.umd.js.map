{"version":3,"file":"ngxs-logger-plugin.umd.js","sources":["../../../packages/logger-plugin/src/internals.ts","../../../packages/logger-plugin/src/action-logger.ts","../../../packages/logger-plugin/src/log-writer.ts","../../../packages/logger-plugin/src/symbols.ts","../../../packages/logger-plugin/src/logger.plugin.ts","../../../packages/logger-plugin/src/logger.module.ts","../../../packages/logger-plugin/index.ts","../../../packages/logger-plugin/ngxs-logger-plugin.ts"],"sourcesContent":["export const repeat = (str: string, times: number) => new Array(times + 1).join(str);\n\nexport const pad = (num: number, maxLength: number) =>\n  repeat('0', maxLength - num.toString().length) + num;\n\nexport function formatTime(time: Date) {\n  return (\n    pad(time.getHours(), 2) +\n    `:` +\n    pad(time.getMinutes(), 2) +\n    `:` +\n    pad(time.getSeconds(), 2) +\n    `.` +\n    pad(time.getMilliseconds(), 3)\n  );\n}\n","import { getActionTypeFromInstance, Store } from '@ngxs/store';\n\nimport { formatTime } from './internals';\nimport { LogWriter } from './log-writer';\n\nexport class ActionLogger {\n  constructor(private action: any, private store: Store, private logWriter: LogWriter) {}\n\n  dispatched(state: any) {\n    const actionName = getActionTypeFromInstance(this.action);\n    const formattedTime = formatTime(new Date());\n\n    const message = `action ${actionName} @ ${formattedTime}`;\n    this.logWriter.startGroup(message);\n\n    // print payload only if at least one property is supplied\n    if (this._hasPayload(this.action)) {\n      this.logWriter.logGrey('payload', { ...this.action });\n    }\n\n    this.logWriter.logGrey('prev state', state);\n  }\n\n  completed(nextState: any) {\n    this.logWriter.logGreen('next state', nextState);\n    this.logWriter.endGroup();\n  }\n\n  errored(error: any) {\n    this.logWriter.logRedish('next state after error', this.store.snapshot());\n    this.logWriter.logRedish('error', error);\n    this.logWriter.endGroup();\n  }\n\n  private _hasPayload(event: any) {\n    const nonEmptyProperties = this._getNonEmptyProperties(event);\n    return nonEmptyProperties.length > 0;\n  }\n\n  private _getNonEmptyProperties(event: any) {\n    const keys = Object.keys(event);\n    const values = keys.map(key => event[key]);\n    return values.filter(value => value !== undefined);\n  }\n}\n","import { NgxsLoggerPluginOptions } from './symbols';\nexport class LogWriter {\n  private logger: any;\n\n  constructor(private options: NgxsLoggerPluginOptions) {\n    this.options = this.options || <any>{};\n    this.logger = options.logger || console;\n  }\n\n  startGroup(message: string) {\n    const startGroupFn = this.options.collapsed\n      ? this.logger.groupCollapsed\n      : this.logger.group;\n    try {\n      startGroupFn.call(this.logger, message);\n    } catch (e) {\n      console.log(message);\n    }\n  }\n\n  endGroup() {\n    try {\n      this.logger.groupEnd();\n    } catch (e) {\n      this.logger.log('—— log end ——');\n    }\n  }\n\n  logGrey(title: string, payload: any) {\n    const greyStyle = 'color: #9E9E9E; font-weight: bold';\n    this.log(title, greyStyle, payload);\n  }\n\n  logGreen(title: string, payload: any) {\n    const greenStyle = 'color: #4CAF50; font-weight: bold';\n    this.log(title, greenStyle, payload);\n  }\n\n  logRedish(title: string, payload: any) {\n    const redishStyle = 'color: #FD8182; font-weight: bold';\n    this.log(title, redishStyle, payload);\n  }\n\n  log(title: string, color: string, payload: any) {\n    if (this.isIE()) {\n      this.logger.log(title, payload);\n    } else {\n      this.logger.log('%c ' + title, color, payload);\n    }\n  }\n\n  isIE(): boolean {\n    const ua =\n      typeof window !== 'undefined' && window.navigator.userAgent\n        ? window.navigator.userAgent\n        : '';\n    let msIE = false;\n    const oldIE = ua.indexOf('MSIE ');\n    const newIE = ua.indexOf('Trident/');\n    if (oldIE > -1 || newIE > -1) {\n      msIE = true;\n    }\n    return msIE;\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nexport interface NgxsLoggerPluginOptions {\n  /** Auto expand logged actions  */\n  collapsed?: boolean;\n\n  /** Provide alternate console.log implementation */\n  logger?: any;\n\n  /** Disable the logger. Useful for prod mode. */\n  disabled?: boolean;\n\n  /** Predicate for actions to be the logged. Takes action and state snapshot as parameters */\n  filter?: (action: any, state: any) => boolean;\n}\n\nexport const NGXS_LOGGER_PLUGIN_OPTIONS = new InjectionToken('NGXS_LOGGER_PLUGIN_OPTIONS');\n","import { Inject, Injectable, Injector } from '@angular/core';\nimport { NgxsNextPluginFn, NgxsPlugin, Store } from '@ngxs/store';\nimport { catchError, tap } from 'rxjs/operators';\nimport { ActionLogger } from './action-logger';\nimport { LogWriter } from './log-writer';\nimport { NgxsLoggerPluginOptions, NGXS_LOGGER_PLUGIN_OPTIONS } from './symbols';\n\n@Injectable()\nexport class NgxsLoggerPlugin implements NgxsPlugin {\n  private _store: Store;\n  private _logWriter: LogWriter;\n\n  constructor(\n    @Inject(NGXS_LOGGER_PLUGIN_OPTIONS) private _options: NgxsLoggerPluginOptions,\n    private _injector: Injector\n  ) {}\n\n  handle(state: any, event: any, next: NgxsNextPluginFn) {\n    if (this._options.disabled || !this._options.filter!(event, state)) {\n      return next(state, event);\n    }\n\n    this._logWriter = this._logWriter || new LogWriter(this._options);\n    // Retrieve lazily to avoid cyclic dependency exception\n    this._store = this._store || this._injector.get<Store>(Store);\n\n    const actionLogger = new ActionLogger(event, this._store, this._logWriter);\n\n    actionLogger.dispatched(state);\n\n    return next(state, event).pipe(\n      tap(nextState => {\n        actionLogger.completed(nextState);\n      }),\n      catchError(error => {\n        actionLogger.errored(error);\n        throw error;\n      })\n    );\n  }\n}\n","import { InjectionToken, ModuleWithProviders, NgModule } from '@angular/core';\nimport { NGXS_PLUGINS } from '@ngxs/store';\nimport { NgxsLoggerPlugin } from './logger.plugin';\nimport { NgxsLoggerPluginOptions, NGXS_LOGGER_PLUGIN_OPTIONS } from './symbols';\n\nexport const USER_OPTIONS = new InjectionToken('LOGGER_USER_OPTIONS');\n\nexport function loggerOptionsFactory(options: NgxsLoggerPluginOptions) {\n  const defaultLoggerOptions: NgxsLoggerPluginOptions = {\n    logger: console,\n    collapsed: false,\n    disabled: false,\n    filter: () => true\n  };\n\n  return {\n    ...defaultLoggerOptions,\n    ...options\n  };\n}\n\n@NgModule()\nexport class NgxsLoggerPluginModule {\n  static forRoot(\n    options?: NgxsLoggerPluginOptions\n  ): ModuleWithProviders<NgxsLoggerPluginModule> {\n    return {\n      ngModule: NgxsLoggerPluginModule,\n      providers: [\n        {\n          provide: NGXS_PLUGINS,\n          useClass: NgxsLoggerPlugin,\n          multi: true\n        },\n        {\n          provide: USER_OPTIONS,\n          useValue: options\n        },\n        {\n          provide: NGXS_LOGGER_PLUGIN_OPTIONS,\n          useFactory: loggerOptionsFactory,\n          deps: [USER_OPTIONS]\n        }\n      ]\n    };\n  }\n}\n","/**\n * The public api for consumers of @ngxs/logger-plugin\n */\nexport * from './src/public_api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["getActionTypeFromInstance","InjectionToken","Store","tap","catchError","i0","Injectable","Inject","NGXS_PLUGINS","NgModule"],"mappings":"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"}